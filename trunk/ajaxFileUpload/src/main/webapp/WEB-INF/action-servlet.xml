<?xml version="1.0" encoding="UTF-8"?>
<beans 
xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="uploadFilesController" class="com.hillert.upload.web.controller.UploadFilesController">
          <property name="sessionForm"><value>false</value></property>
          <property name="service"><ref bean="uploadService"/></property>
          <property name="commandName"><value>command</value></property>
          <property name="commandClass"><value>com.hillert.upload.web.formobjects.DataImportForm</value></property>
          <property name="formView"><value>upload</value></property>
          <property name="successView" value="redirect:/upload.html"/>
          <property name="multipartResolver">
            <ref bean="customMultipartResolver"/>
          </property>
    </bean>

    <bean id="filenameController" class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>
    
    <!-- View Resolver for JSPs -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- How to resolve methods for multi-action controllers -->
    <bean id="methodNameResolver" class="org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver">
    <property name="paramName" value="action"/>
    <property name="defaultMethodName" value="view"/>
    </bean>

    <bean id="urlMapping" 
        class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <value>
                /upload.html=uploadFilesController
            </value>
        </property>
    </bean>
    
    <!-- Simple handler mapping which maps url requests directly to the specified views. -->
    <bean id="urlViewMapping" class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/> 

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages"/>
    </bean>

     <!-- MultipartResolver for parsing file uploads, implementation for Commons FileUpload -->
     <!-- !!! Naming is important !!! For default purposes the bean id is typically id="multipartResolver" but then
          the multipart request is intercepted on a global level. Personally I like to catch the MaxUploadSizeExceededException
          in the controller directly. That way I can present a nice little 'validation'error to the user, informing her/him
          that they trid to upload a file larger than the maximum allowed size. Therefore I chose a custom name for the
          bean and then in return inject this bean into my upload controller.
     -->
     <bean id="customMultipartResolver" class="com.hillert.upload.web.ajax.AjaxFileUploadMultipartResolver">         
        <property name="maxUploadSize"><value>4194304</value> </property>
    </bean>
</beans>